{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","filterField","handlefilterFieldChange","value","onChange","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Persons","persons","delPerson","filter","p","name","toLowerCase","indexOf","map","person","i","key","number","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","messageType","className","App","useState","setPersons","useEffect","personService","initialPersons","setNewName","setNewNumber","setfilterField","setMessage","setMessageType","event","target","preventDefault","personObject","findIndex","find","window","confirm","returnedPerson","console","log","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a9289b6.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n    const {filterField,handlefilterFieldChange} = props\n    \n    return (\n        <div>\n            filter shown with<input value={filterField} onChange={handlefilterFieldChange} ></input>\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n// import React, { useState } from 'react'\n\nconst PersonForm = (props) => {\n    const { addName,newName, handleNameChange, newNumber, handleNumberChange } = props\n\n    return (\n        <form onSubmit={addName}>\n            <div>\n                name: <input value={newName} onChange={handleNameChange} />\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\n\n\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = (props) => {\r\n    const { persons, filterField, delPerson } = props\r\n    return (\r\n        persons.filter(p => p.name.toLowerCase().indexOf(filterField) !== -1).map((person, i) =>\r\n            <div key={i}>{person.name} {person.number}\r\n                <button onClick={() => delPerson(person.id)}>delete</button>\r\n            </div>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst del = id => {\n    const request = axios.delete(`${baseUrl}/${id}`, id)\n    return request\n}\nexport default { getAll, create, update, del }","import React from 'react'\n\nconst Notification = ({ message, messageType }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={messageType}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    useEffect(() => {\r\n        personService.getAll().then(initialPersons => {\r\n            setPersons(initialPersons)\r\n        })\r\n    }, [])\r\n\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [filterField, setfilterField] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n    const [messageType, setMessageType] = useState('info')\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handlefilterFieldChange = (event) => {\r\n        setfilterField(event.target.value)\r\n    }\r\n\r\n    const addName = (event) => {\r\n        event.preventDefault()\r\n\r\n        const personObject = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n\r\n        if (persons.findIndex(p => p.name === newName) !== -1) {\r\n            let person = persons.find(p => p.name === newName)\r\n            // alert(`${newName} is already added to phonebook`)\r\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number\r\n            with a new one?`) === true) {\r\n                personService.update(person.id, personObject).then(\r\n                    returnedPerson => {\r\n                        console.log(returnedPerson)\r\n                        setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\r\n                        setNewName('')\r\n                        setNewNumber('')\r\n\r\n                        setMessageType('info')\r\n                        setMessage(`Updated ${newName}`)\r\n\r\n                        setTimeout(() => {\r\n                            setMessage(null)\r\n                        }, 5000)\r\n                    }\r\n                )\r\n                    .catch(error => {\r\n                        setMessageType('error')\r\n                        // setMessage(`Information of ${newName} has already been removed from server`)\r\n                        setMessage(error.response.data)\r\n\r\n                        // setTimeout(() => {\r\n                        //     setMessage(null)\r\n                        // }, 5000)\r\n                        // setPersons(persons.filter(p => p.name !== newName))\r\n                    })\r\n            }\r\n        }\r\n        else {\r\n            personService.create(personObject).then(\r\n                personObject => {\r\n                    setPersons(persons.concat(personObject))\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                    setMessageType('info')\r\n                    setMessage(`Added ${newName}`)\r\n\r\n                    setTimeout(() => {\r\n                        setMessage(null)\r\n                    }, 5000)\r\n                }\r\n            ).catch(error => {\r\n                console.log(error.response.data)\r\n                setMessageType('error')\r\n                setMessage(error.response.data)\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    const delPerson = id => {\r\n        let p = persons.find(p => p.id === id)\r\n        if (window.confirm(`Delete ${p.name}?`) === true) {\r\n            personService.del(id)\r\n                .then(\r\n                    setPersons(persons.filter(p => p.id !== id))\r\n                )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={message} messageType={messageType} />\r\n            <Filter filterField={filterField} handlefilterFieldChange={handlefilterFieldChange}></Filter>\r\n            <h2>add a new</h2>\r\n            <PersonForm addName={addName} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange}></PersonForm>\r\n            <h2>Numbers</h2>\r\n            <Persons persons={persons} filterField={filterField} delPerson={delPerson}></Persons>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}